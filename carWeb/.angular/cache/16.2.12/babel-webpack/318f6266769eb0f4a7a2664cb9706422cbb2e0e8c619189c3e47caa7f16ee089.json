{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DetailsComponent = class DetailsComponent {\n  constructor(PostsService, authService, titleService, router, route) {\n    this.PostsService = PostsService;\n    this.authService = authService;\n    this.titleService = titleService;\n    this.router = router;\n    this.route = route;\n  }\n  ngOnInit() {\n    this.titleService.setTitle('Details');\n    this.isLogged = this.authService.isLogged;\n    const carId = this.route.snapshot.params['carId'];\n    this.userId = this.authService.getUserData()?._id;\n    this.likes$ = this.PostsService.postTotalLikes(carId);\n    this.canLike$ = this.PostsService.canLike(carId, this.userId);\n    this.subscribe$ = this.PostsService.getPostById(carId).subscribe({\n      next: carInfo => {\n        this.car = carInfo;\n        this.titleService.setTitle(this.car.brand);\n        this.isOwner = carInfo._ownerId == this.userId;\n      },\n      error: error => this.errorMessage = error.error.message\n    });\n  }\n  removePost(postId) {\n    const isConfirmed = window.confirm('Are you sure you want to delete this post?');\n    if (isConfirmed) {\n      this.subscribe$ = this.PostsService.deletePostById(postId).subscribe({\n        error: error => this.errorMessage = error.error.message,\n        complete: () => this.router.navigate(['catalog'])\n      });\n    }\n  }\n  episodeLike(postId) {\n    this.subscribe$ = this.PostsService.likePostById(postId).subscribe({\n      error: error => {\n        if (error.message.includes('Unknown Error')) {\n          this.errorMessage = 'Server not connected!';\n        } else {\n          this.errorMessage = error.error.message;\n        }\n      },\n      complete: () => {\n        this.canLike$ = this.PostsService.canLike(postId, this.userId);\n        this.likes$ = this.PostsService.postTotalLikes(postId);\n        this.router.navigate(['/catalog', 'details', postId]);\n      }\n    });\n  }\n  ngOnDestroy() {\n    if (this.subscribe$ != undefined) {\n      this.subscribe$.unsubscribe();\n    }\n  }\n};\nDetailsComponent = __decorate([Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})], DetailsComponent);","map":{"version":3,"names":["Component","DetailsComponent","constructor","PostsService","authService","titleService","router","route","ngOnInit","setTitle","isLogged","carId","snapshot","params","userId","getUserData","_id","likes$","postTotalLikes","canLike$","canLike","subscribe$","getPostById","subscribe","next","carInfo","car","brand","isOwner","_ownerId","error","errorMessage","message","removePost","postId","isConfirmed","window","confirm","deletePostById","complete","navigate","episodeLike","likePostById","includes","ngOnDestroy","undefined","unsubscribe","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\SoftUni\\Car-Web Angular project\\car-web\\src\\app\\features\\posts\\details\\details.component.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { PostInterface } from 'src/app/core/interfaces/Post';\nimport { PostsService } from 'src/app/core/services/posts.service';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\n\nexport class DetailsComponent implements OnInit, OnDestroy {\n  car!: PostInterface;\n  subscribe$!: Subscription;\n  errorMessage!: string;\n\n  isOwner!: boolean;\n  isLogged!: boolean;\n  userId!: string;\n  canLike$!: Observable<number>;\n  likes$!: Observable<number>;\n\n  constructor(\n    private PostsService: PostsService,\n    private authService: AuthService,\n    private titleService: Title,\n    private router: Router,\n    private route: ActivatedRoute,) { }\n\n  ngOnInit(): void {\n    this.titleService.setTitle('Details');\n    this.isLogged = this.authService.isLogged;\n\n    const carId: string = this.route.snapshot.params['carId'];\n    this.userId = this.authService.getUserData()?._id as string;\n    this.likes$ = this.PostsService.postTotalLikes(carId);\n    this.canLike$ = this.PostsService.canLike(carId, this.userId);\n\n    this.subscribe$ = this.PostsService.getPostById(carId).subscribe({\n      next: (carInfo) => {\n        this.car = carInfo;\n        this.titleService.setTitle(this.car.brand);\n        this.isOwner = carInfo._ownerId == this.userId;\n      },\n      error: (error) => this.errorMessage = error.error.message\n    });\n  }\n\n  removePost(postId: string) {\n\n    const isConfirmed = window.confirm('Are you sure you want to delete this post?');\n\n    if (isConfirmed) {\n      this.subscribe$ = this.PostsService.deletePostById(postId).subscribe({\n        error: (error) => this.errorMessage = error.error.message,\n        complete: () => this.router.navigate(['catalog'])\n      });\n    }\n\n  }\n\n  episodeLike(postId: string) {\n    this.subscribe$ = this.PostsService.likePostById(postId).subscribe({\n      error: (error) => {\n        if (error.message.includes('Unknown Error')) {\n          this.errorMessage = 'Server not connected!'\n        } else {\n          this.errorMessage = error.error.message;\n        }\n      },\n      complete: () => {\n        this.canLike$ = this.PostsService.canLike(postId, this.userId);\n        this.likes$ = this.PostsService.postTotalLikes(postId);\n        this.router.navigate(['/catalog', 'details', postId]);\n      },\n    });\n    \n  }\n\n  ngOnDestroy(): void {\n    if (this.subscribe$ != undefined) {\n      this.subscribe$.unsubscribe();\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}