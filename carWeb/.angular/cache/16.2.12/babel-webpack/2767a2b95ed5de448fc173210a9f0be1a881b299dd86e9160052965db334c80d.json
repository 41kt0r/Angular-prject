{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\n// import { AuthService } from 'src/app/core/services/auth.service';\n// import { UserService } from 'src/app/core/services/user.service';\nexport let LoginComponent = class LoginComponent {\n  constructor(titleService, userService, authService, router) {\n    this.titleService = titleService;\n    this.userService = userService;\n    this.authService = authService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.titleService.setTitle('Login Page');\n  }\n  loginMethod(formData) {\n    const {\n      email,\n      password\n    } = formData.value;\n    this.subscribe$ = this.userService.login(email, password).subscribe({\n      next: userData => {\n        this.authService.saveUserData(userData);\n        this.router.navigate(['/']);\n      },\n      error: error => {\n        if (error.message.includes('Unknown Error')) {\n          this.errorMessage = 'Server not connected!';\n        } else {\n          this.errorMessage = error.error.message;\n        }\n      }\n    });\n  }\n  ngOnDestroy() {\n    if (this.subscribe$ != undefined) {\n      this.subscribe$.unsubscribe();\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","titleService","userService","authService","router","ngOnInit","setTitle","loginMethod","formData","email","password","value","subscribe$","login","subscribe","next","userData","saveUserData","navigate","error","message","includes","errorMessage","ngOnDestroy","undefined","unsubscribe","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\SoftUni\\Angular pj\\car-web\\src\\app\\features\\user\\login\\login.component.ts"],"sourcesContent":["\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { UserService } from 'src/app/core/services/user.service';\n\n// import { AuthService } from 'src/app/core/services/auth.service';\n// import { UserService } from 'src/app/core/services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\n\nexport class LoginComponent implements OnInit, OnDestroy {\n  subscribe$!: Subscription;\n  errorMessage!: string;\n\n  constructor(\n    private titleService: Title,\n    private userService: UserService,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.titleService.setTitle('Login Page');\n  }\n\n  loginMethod(formData: NgForm): void {\n    const { email, password } = formData.value;\n    \n    this.subscribe$ = this.userService.login(email, password).subscribe({\n      next: (userData) => {\n        this.authService.saveUserData(userData);\n        this.router.navigate(['/']);\n      },\n      error: (error) => {\n        \n        if (error.message.includes('Unknown Error')) {\n          this.errorMessage = 'Server not connected!'\n        } else {\n          this.errorMessage = error.error.message;\n        }\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscribe$ != undefined) {\n      this.subscribe$.unsubscribe();\n    }\n  }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAA2B,eAAe;AAO5D;AACA;AAQO,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YACUC,YAAmB,EACnBC,WAAwB,EACxBC,WAAwB,EACxBC,MAAc;IAHd,KAAAH,YAAY,GAAZA,YAAY;IACZ,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EACb;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACJ,YAAY,CAACK,QAAQ,CAAC,YAAY,CAAC;EAC1C;EAEAC,WAAWA,CAACC,QAAgB;IAC1B,MAAM;MAAEC,KAAK;MAAEC;IAAQ,CAAE,GAAGF,QAAQ,CAACG,KAAK;IAE1C,IAAI,CAACC,UAAU,GAAG,IAAI,CAACV,WAAW,CAACW,KAAK,CAACJ,KAAK,EAAEC,QAAQ,CAAC,CAACI,SAAS,CAAC;MAClEC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACb,WAAW,CAACc,YAAY,CAACD,QAAQ,CAAC;QACvC,IAAI,CAACZ,MAAM,CAACc,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC7B,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QAEf,IAAIA,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAE;UAC3C,IAAI,CAACC,YAAY,GAAG,uBAAuB;SAC5C,MAAM;UACL,IAAI,CAACA,YAAY,GAAGH,KAAK,CAACA,KAAK,CAACC,OAAO;;MAE3C;KACD,CAAC;EACJ;EAEAG,WAAWA,CAAA;IACT,IAAI,IAAI,CAACX,UAAU,IAAIY,SAAS,EAAE;MAChC,IAAI,CAACZ,UAAU,CAACa,WAAW,EAAE;;EAEjC;CACD;AAvCY1B,cAAc,GAAA2B,UAAA,EAN1B5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EAEW9B,cAAc,CAuC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}