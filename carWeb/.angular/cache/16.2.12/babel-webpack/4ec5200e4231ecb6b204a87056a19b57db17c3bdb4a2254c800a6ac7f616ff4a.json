{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(email, password) {\n    const url = 'http://localhost:3030/users/login';\n    return this.http.post(url, {\n      email,\n      password\n    });\n  }\n  register(email, password) {\n    const url = 'http://localhost:3030/users/register';\n    return this.http.post(url, {\n      email,\n      password\n    });\n  }\n  logout() {\n    const url = 'http://localhost:3030/users/logout';\n    return this.http.get(url);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserService","constructor","http","login","email","password","url","post","register","logout","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\SoftUni\\Angular pj\\car-web\\src\\app\\core\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IUser } from '../interfaces/User';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  login(email: string, password: string): Observable<IUser> {\n    const url = 'http://localhost:3030/users/login';\n    return this.http.post<IUser>(url, { email, password });\n  }\n\n  register(email: string, password: string): Observable<IUser> {\n    const url = 'http://localhost:3030/users/register';\n    return this.http.post<IUser>(url, { email, password });\n  }\n\n  logout(): Observable<unknown> {\n    const url = 'http://localhost:3030/users/logout';\n    return this.http.get<unknown>(url);\n  }\n}"],"mappings":";;AASA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,MAAMC,GAAG,GAAG,mCAAmC;IAC/C,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAQD,GAAG,EAAE;MAAEF,KAAK;MAAEC;IAAQ,CAAE,CAAC;EACxD;EAEAG,QAAQA,CAACJ,KAAa,EAAEC,QAAgB;IACtC,MAAMC,GAAG,GAAG,sCAAsC;IAClD,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAQD,GAAG,EAAE;MAAEF,KAAK;MAAEC;IAAQ,CAAE,CAAC;EACxD;EAEAI,MAAMA,CAAA;IACJ,MAAMH,GAAG,GAAG,oCAAoC;IAChD,OAAO,IAAI,CAACJ,IAAI,CAACQ,GAAG,CAAUJ,GAAG,CAAC;EACpC;EAAC,QAAAK,CAAA,G;qBAhBUX,WAAW,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXhB,WAAW;IAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}