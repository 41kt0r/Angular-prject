{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PostsService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllPosts() {\n    const url = 'http://localhost:3030/data/cars';\n    return this.http.get(url);\n  }\n  getPostById(postId) {\n    const url = `http://localhost:3030/data/cars/${postId}`;\n    return this.http.get(url);\n  }\n  editPost(postId, postData) {\n    const url = `http://localhost:3030/data/cars/${postId}`;\n    return this.http.put(url, postData);\n  }\n  addPost(postData) {\n    const url = 'http://localhost:3030/data/cars';\n    return this.http.post(url, postData);\n  }\n  // опит за delete button\n  deleteEpisodeById(postId) {\n    const url = `http://localhost:3030/data/cars/${postId}`;\n    return this.http.delete(url);\n  }\n  // opit za like button\n  postTotalLikes(postId) {\n    const url = `http://localhost:3030/data/likes?where=episodeId%3D%22${postId}%22&distinct=_ownerId&count`;\n    return this.http.get(url);\n  }\n  canLike(episodeId, userId) {\n    const url = `http://localhost:3030/data/likes?where=episodeId%3D%22${episodeId}%22%20and%20_ownerId%3D%22${userId}%22&count`;\n    return this.http.get(url);\n  }\n  static #_ = this.ɵfac = function PostsService_Factory(t) {\n    return new (t || PostsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostsService,\n    factory: PostsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PostsService","constructor","http","getAllPosts","url","get","getPostById","postId","editPost","postData","put","addPost","post","deleteEpisodeById","delete","postTotalLikes","canLike","episodeId","userId","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\SoftUni\\Angular pj\\car-web\\src\\app\\core\\services\\posts.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { PostInterface } from '../interfaces/Post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAllPosts(): Observable<PostInterface[]> {\n    const url = 'http://localhost:3030/data/cars';\n    return this.http.get<PostInterface[]>(url);\n  }\n\n  getPostById (postId: string): Observable<PostInterface> {\n    const url = `http://localhost:3030/data/cars/${postId}`;\n    return this.http.get<PostInterface>(url);\n  }\n\n  editPost(postId: string, postData: PostInterface): Observable<PostInterface> {\n    const url = `http://localhost:3030/data/cars/${postId}`;\n    return this.http.put<PostInterface>(url, postData);\n  }\n\n  addPost(postData: PostInterface): Observable<PostInterface> {\n    const url = 'http://localhost:3030/data/cars';\n    return this.http.post<PostInterface>(url, postData);\n  }\n\n  // опит за delete button\n\n  deleteEpisodeById(postId: string): Observable<unknown> {\n    const url = `http://localhost:3030/data/cars/${postId}`;\n    return this.http.delete<unknown>(url);\n  }\n\n  // opit za like button\n\n  postTotalLikes(postId: string): Observable<number> {\n    const url = `http://localhost:3030/data/likes?where=episodeId%3D%22${postId}%22&distinct=_ownerId&count`;\n    return this.http.get<number>(url);\n  }\n\n  canLike(episodeId: string, userId: string): Observable<number> {\n    const url = `http://localhost:3030/data/likes?where=episodeId%3D%22${episodeId}%22%20and%20_ownerId%3D%22${userId}%22&count`;\n    return this.http.get<number>(url);\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EACxB;EAEAC,WAAWA,CAAA;IACT,MAAMC,GAAG,GAAG,iCAAiC;IAC7C,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAkBD,GAAG,CAAC;EAC5C;EAEAE,WAAWA,CAAEC,MAAc;IACzB,MAAMH,GAAG,GAAG,mCAAmCG,MAAM,EAAE;IACvD,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAgBD,GAAG,CAAC;EAC1C;EAEAI,QAAQA,CAACD,MAAc,EAAEE,QAAuB;IAC9C,MAAML,GAAG,GAAG,mCAAmCG,MAAM,EAAE;IACvD,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAgBN,GAAG,EAAEK,QAAQ,CAAC;EACpD;EAEAE,OAAOA,CAACF,QAAuB;IAC7B,MAAML,GAAG,GAAG,iCAAiC;IAC7C,OAAO,IAAI,CAACF,IAAI,CAACU,IAAI,CAAgBR,GAAG,EAAEK,QAAQ,CAAC;EACrD;EAEA;EAEAI,iBAAiBA,CAACN,MAAc;IAC9B,MAAMH,GAAG,GAAG,mCAAmCG,MAAM,EAAE;IACvD,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAUV,GAAG,CAAC;EACvC;EAEA;EAEAW,cAAcA,CAACR,MAAc;IAC3B,MAAMH,GAAG,GAAG,yDAAyDG,MAAM,6BAA6B;IACxG,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAASD,GAAG,CAAC;EACnC;EAEAY,OAAOA,CAACC,SAAiB,EAAEC,MAAc;IACvC,MAAMd,GAAG,GAAG,yDAAyDa,SAAS,6BAA6BC,MAAM,WAAW;IAC5H,OAAO,IAAI,CAAChB,IAAI,CAACG,GAAG,CAASD,GAAG,CAAC;EACnC;EAAC,QAAAe,CAAA,G;qBA1CUnB,YAAY,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZxB,YAAY;IAAAyB,OAAA,EAAZzB,YAAY,CAAA0B,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}